@model Burger_Station.Models.User

@{
    ViewData["Title"] = "DetailsAdmin";
}

<!DOCTYPE html>
<meta charset="utf-8">

<html>
<head>
    <!--Custom styles-->
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/Details.css">
</head>
<body>
    <!-- ======= Top Bar ======= -->
    <section id="topbar" class="d-none d-lg-flex align-items-center fixed-top topbar-transparent">
        <div class="container text-right">
        </div>
    </section>

    <!-- ======= Header ======= -->
    <header id="header" class="fixed-top d-flex align-items-center header-transparent">
        <div class="container d-flex align-items-center">

            <div class="logo mr-auto">
                <h1 class="text-light"><a href="\Home"><span>Burger Station</span></a></h1>
            </div>
            <nav class="nav-menu d-none d-lg-block">
                <ul>
                    <!-- All users button -->
                    <li class="book-a-table text-center">
                        <a asp-action="Index">All Users</a>
                    </li>

                    <!-- Creat new user button -->
                    <li class="book-a-table text-center">
                        <a asp-action="Create">Add New User</a>
                    </li>

                    <!-- Edit button -->
                    <li class="book-a-table text-center">
                        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                    </li>

                    <!-- Delete button -->
                    <li class="book-a-table text-center">
                        <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
                    </li>

                    <!-- Back to Home button -->
                    <li class="book-a-table text-center"><a href="\Home">Back</a></li>
                </ul>
            </nav>
            <!-- .nav-menu -->

        </div>
    </header>
    <!-- End Header -->

    <section><br></section>

    <!-- ======= Member Info ======= -->
    <div class="section-title">
        <h2>
            <span>Details:</span> @Model.FirstName @Model.LastName, @Model.Type
        </h2>
        <hr />
        <b><span>@Html.DisplayNameFor(model => model.Email):</span></b> @Html.DisplayFor(model => model.Email) <br>
        <b><span>@Html.DisplayNameFor(model => model.Password):</span></b> @Html.DisplayFor(model => model.Password) <br>
        <b><span>@Html.DisplayNameFor(model => model.Birthday):</span></b> @Html.DisplayFor(model => model.Birthday) <br>
        <b><span>@Html.DisplayNameFor(model => model.FavoriteItem):</span></b> @ViewBag.FavoriteItem <br>
    </div>
    <div class="myvideo">
        <iframe width="560" height="315" src="https://www.youtube.com/embed/f63qxa_lAdU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </div>

    <!-- End Member Info -->
    <!-- Facebook SDK -->
    <script type="text/javascript" src="~/Content/JSFiles/site.js"></script>
    <script>
        window.fbAsyncInit = function () {
            FB.init({
                appId: '2560600564202212',
                cookie: true,
                xfbml: true,
                version: 'v8.0'
            });

            FB.AppEvents.logPageView();
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "https://connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>


    <!-- Facebook post -->
    <label> Post on our Facebook Page: </label>
    <br />
    <br />
    <textarea style="width:600px; height:100px;" name="text" placeholder="Type your status here!" id="postTxt"></textarea>
    <br />
    <button style="width:600px;" onclick="postAStatus()"> Publish </button>

    <br />
    <br />
    <br />

    <!--- D3 Pie Chart--->
    <!-- Imports d3js libraries -->
    <script src="https://d3js.org/d3.v5.js"></script>
    <script src="https://d3js.org/d3-scale.v3.min.js"></script>
    <script src="https://d3js.org/d3-axis.v1.min.js"></script>

    <!-- Color scale -->
    <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>

    <!-- Add 2 buttons -->
    <button style="float:right" onclick="update(data1)">Members/Admins</button>
    <button style="float:right" onclick="update(data2)">Favorite Item</button>

    <!-- Create a div where the graph will take place -->


    <center>
        <div id="secondApp">
            <div id="secondChart">
                <svg id="secondSvg"></svg>
            </div>
            <div id="secondData">
                <ul>
                    <li>
                        <span style="background-color: yellow;"> &nbsp; </span> &nbsp;&nbsp; Member users &nbsp;&nbsp; @ViewBag.userMember
                    </li>
                    <li>
                        <span style="background-color:blue;"> &nbsp; </span> &nbsp;&nbsp; Admin users &nbsp;&nbsp; @ViewBag.userAdmin
                    </li>
                </ul>
            </div>
        </div>
    </center>


    <script type="text/javascript">

        var DATA2 = { a: @ViewBag.userAdmin, b: @ViewBag.userMember }
        var width = 450, height = 450, margin = 40;
        var radius = Math.min(width, height) / 2 - margin;
        var container = d3
            .select('#secondSvg')
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
        var pie = d3.pie()
            .value(data => data.value)
        var data_ready = pie(d3.entries(DATA2))
        var color = 'blue';
        container
            .selectAll('groups')
            .data(data_ready)
            .enter()
            .append('path')
            .attr('d', d3.arc()
                .innerRadius(0)
                .outerRadius(radius)
            )
            .attr('fill', () => {
                if (color == 'blue') { color = 'yellow'; return 'blue'; } else return 'yellow';
            })
            .attr("stroke", "black")
            .style("stroke-width", "2px")
            .style("opacity", 0.7);
    </script>

</body>
</html>